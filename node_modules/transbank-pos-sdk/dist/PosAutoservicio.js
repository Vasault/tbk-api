"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var POSBase = require('./PosBase');

module.exports = /*#__PURE__*/function (_POSBase) {
  (0, _inherits2["default"])(POSAutoservicio, _POSBase);

  var _super = _createSuper(POSAutoservicio);

  function POSAutoservicio() {
    (0, _classCallCheck2["default"])(this, POSAutoservicio);
    return _super.apply(this, arguments);
  }

  (0, _createClass2["default"])(POSAutoservicio, [{
    key: "sale",
    value: function sale(amount, ticket) {
      var _this = this;

      var sendStatus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var sendVoucher = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      var callback = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
      amount = amount.toString().padStart(9, "0").slice(0, 9);
      ticket = ticket.toString().padStart(6, "0").slice(0, 6);
      var status = sendStatus ? "1" : "0";
      var voucher = sendVoucher ? "1" : "0";
      return this.send("0200|".concat(amount, "|").concat(ticket, "|").concat(voucher, "|").concat(status), true, callback).then(function (data) {
        return _this.saleResponse(data);
      });
    }
  }, {
    key: "saleResponse",
    value: function saleResponse(payload) {
      var _chunks$;

      var chunks = payload.split("|");
      var authorizationCode = typeof chunks[5] !== 'undefined' ? chunks[5].trim() : null;
      var response = {
        functionCode: parseInt(chunks[0]),
        responseCode: parseInt(chunks[1]),
        responseMessage: this.getResponseMessage(parseInt(chunks[1])),
        commerceCode: parseInt(chunks[2]),
        terminalId: chunks[3],
        successful: parseInt(chunks[1]) === 0,
        ticket: chunks[4],
        authorizationCode: authorizationCode,
        amount: parseInt(chunks[6]),
        last4Digits: chunks[7] !== '' ? parseInt(chunks[7]) : null,
        operationNumber: chunks[8],
        cardType: chunks[9],
        accountingDate: chunks[10],
        accountNumber: chunks[11],
        cardBrand: chunks[12],
        realDate: chunks[13],
        realTime: chunks[14],
        voucher: (_chunks$ = chunks[15]) === null || _chunks$ === void 0 ? void 0 : _chunks$.match(/.{1,40}/g),
        shareType: chunks[16],
        sharesNumber: chunks[17],
        sharesAmount: chunks[18],
        sharesTypeComment: chunks[19]
      };
      return response;
    }
  }, {
    key: "getLastSale",
    value: function getLastSale() {
      var _this2 = this;

      var sendVoucher = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var voucher = sendVoucher ? "1" : "0";
      return this.send("0250|".concat(voucher)).then(function (data) {
        try {
          return _this2.saleResponse(data);
        } catch (e) {
          throw new Error(e.getMessage());
        }
      });
    }
  }, {
    key: "refund",
    value: function refund() {
      var _this3 = this;

      return this.send("1200").then(function (data) {
        var chunks = data.split("|");
        return {
          functionCode: parseInt(chunks[0].replace(/\D+/g, '')),
          responseCode: parseInt(chunks[1]),
          commerceCode: parseInt(chunks[2]),
          terminalId: chunks[3],
          authorizationCode: chunks[4].trim(),
          operationId: chunks[5],
          responseMessage: _this3.getResponseMessage(parseInt(chunks[1])),
          successful: parseInt(chunks[1]) === 0
        };
      });
    }
  }, {
    key: "closeDay",
    value: function closeDay() {
      var _this4 = this;

      var sendVoucher = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      var voucher = sendVoucher ? "1" : "0";
      return this.send("0500|".concat(voucher)).then(function (data) {
        var _chunks$2;

        var chunks = data.split("|");
        return {
          functionCode: parseInt(chunks[0]),
          responseCode: parseInt(chunks[1]),
          commerceCode: parseInt(chunks[2]),
          terminalId: chunks[3],
          voucher: (_chunks$2 = chunks[4]) === null || _chunks$2 === void 0 ? void 0 : _chunks$2.match(/.{1,40}/g),
          responseMessage: _this4.getResponseMessage(parseInt(chunks[1])),
          successful: parseInt(chunks[1]) === 0
        };
      });
    }
  }, {
    key: "initialization",
    value: function initialization() {
      return this.send("0070", false);
    }
  }, {
    key: "initializationResponse",
    value: function initializationResponse() {
      var _this5 = this;

      return this.send("0080").then(function (data) {
        var chunks = data.split("|");
        return {
          functionCode: parseInt(chunks[0]),
          responseCode: parseInt(chunks[1]),
          transactionDate: parseInt(chunks[2]),
          transactionTime: chunks[3],
          responseMessage: _this5.getResponseMessage(parseInt(chunks[1])),
          successful: parseInt(chunks[1]) === 0
        };
      });
    }
  }]);
  return POSAutoservicio;
}(POSBase);